{
  "openapi": "3.0.3",
  "info": {
    "title": "Water Tracker API",
    "description": "## API documentation for project Water Tracker [link](https://sashakuh.github.io/frontend-water/) \nThe project is a web application for tracking daily water consumption level. It allows the user to calculate their personal daily water consuption norm and then track how much water they drink compared to this amount. The project aim is to help users  easily track the amount of water consumed and form healthy water consuption habits. \n\nOur app has the following features: user registration, authentication and authorization. Users can insert, save, and change the information about the amount of water drunk and change their daily norm. Users also can view statistics of daily and monthly water consumption. Daily statistics shows the daily norm, amount of consumed water, and the correlation between them in percents. Monthly statistics shows how much water the user consumed in a chosen month. It also shows the days when the user fulfilled the daily norm and when they did not meet the norm. If the daily norm was not fulfilled, the app also shows to what extent in percents the user reached their norm. \n\nIn addition, the application has a friendly user interface that allows you to perform all the necessary actions conveniently and quickly. The project ensures user security through password encryption and token-based identification.",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://backend-water.onrender.com/api/",
      "description": "Main (production) server"
    },
    {
      "url": "http://localhost:3000/api/",
      "description": "Local test server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Managing the authentication and authorization process for users within the system"
    },
    {
      "name": "users",
      "description": "Operations related to user management"
    },
    {
      "name": "water",
      "description": "Managing information about consumed water"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["auth"],
        "summary": "Sign up (registration) new user",
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyAuth"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userDataAuth"
                },
                "example": {
                  "email": "test@mail.com",
                  "username": "test",
                  "gender": "girl",
                  "avatar": {
                    "URL": "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
                  },
                  "dailyNorma": 2000,
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User with this email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["auth"],
        "summary": "Sign in (login) user",
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyAuth"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userDataAuth"
                },
                "example": {
                  "email": "test@mail.com",
                  "username": "test",
                  "gender": "girl",
                  "avatar": {
                    "URL": "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
                  },
                  "dailyNorma": 2000,
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["auth"],
        "summary": "Signout (logout) user",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized401"
          }
        }
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Request for reset password",
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyResetPasswordRequest"
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset request accepted. Confirmation email has been sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          }
        }
      }
    },
    "/auth/reset-password": {
      "patch": {
        "tags": ["auth"],
        "summary": "Request for reset password",
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyResetPassword"
        },
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["users"],
        "summary": "Get information about current user",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserData200"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized401"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["users"],
        "summary": "Update current user information",
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyUpdate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserData200"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized401"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["users"],
        "summary": "Update current user avatar",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "URL": {
                          "type": "string",
                          "examples": [
                            "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
                          ],
                          "default": "https://s.gravatar.com/avatar/..."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "avatar": {
                    "URL": "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest400"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized401"
          },
          "408": {
            "description": "Request timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Request timeout. Not response from cloudinary."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "bodyAuth": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/schemaAuth"
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/authData"
              }
            }
          }
        }
      },
      "bodyResetPasswordRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resetPasswordRequest"
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/passwordRequestData"
              }
            }
          }
        }
      },
      "bodyResetPassword": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resetPassword"
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/passwordResetData"
              }
            }
          }
        }
      },
      "bodyUpdate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/schemaUserUpdate"
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/updateData"
              }
            }
          }
        }
      }
    },
    "responses": {
      "Unauthorized401": {
        "description": "Unauthorized Access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "UserData200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "examples": ["test@mail.com"]
                },
                "username": {
                  "type": "string",
                  "examples": ["test"]
                },
                "gender": {
                  "type": "string",
                  "enum": ["girl", "man"],
                  "default": "girl"
                },
                "avatar": {
                  "type": "object",
                  "properties": {
                    "URL": {
                      "type": "string",
                      "examples": [
                        "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
                      ],
                      "default": "https://s.gravatar.com/avatar/..."
                    }
                  }
                },
                "dailyNorma": {
                  "type": "number",
                  "default": 2000,
                  "maximum": 15000,
                  "minimum": 0
                }
              }
            },
            "example": {
              "email": "test@mail.com",
              "username": "test",
              "gender": "girl",
              "avatar": {
                "URL": "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro"
              },
              "dailyNorma": 2000
            }
          }
        }
      },
      "BadRequest400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Request error description"
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "authData": {
        "value": {
          "email": "test@mail.com",
          "password": "examplePassword"
        }
      },
      "passwordRequestData": {
        "value": {
          "email": "test@mail.com"
        }
      },
      "passwordResetData": {
        "value": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
          "newPassword": "myNewPassword"
        }
      },
      "updateData": {
        "value": {
          "email": "newtest@mail.com",
          "password": {
            "oldPassword": "examplePassword",
            "newPassword": "newPassword"
          },
          "username": "Vasyl",
          "gender": "man"
        }
      }
    },
    "schemas": {
      "schemaAuth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "example@mail.com",
            "example": "test@mail.com"
          },
          "password": {
            "type": "string",
            "example": "qwerty123456"
          }
        },
        "required": ["email", "password"]
      },
      "userDataAuth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@mail.com"
          },
          "username": {
            "type": "string",
            "example": "test"
          },
          "gender": {
            "type": "string",
            "enum": ["girl", "man"],
            "default": "girl",
            "example": "man"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "URL": {
                "type": "string",
                "example": "https://s.gravatar.com/avatar/db16583ea34f55e2250f96a83f00d5b7?s=250&r=g&d=retro",

                "default": "https://s.gravatar.com/avatar/..."
              }
            }
          },
          "dailyNorma": {
            "type": "number",
            "default": 2000,
            "maximum": 15000,
            "minimum": 0,
            "example": 30000
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        }
      },
      "schemaUserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "example@mail.com",
            "example": "testmail@mail.com"
          },
          "password": {
            "type": "object",
            "required": ["oldPassword", "newPassword"],
            "properties": {
              "oldPassword": {
                "type": "string",
                "example": "myOldPassword1234"
              },
              "newPassword": {
                "type": "string",
                "example": "newPass4321"
              }
            }
          },
          "username": {
            "type": "string",
            "example": "Sasha"
          },
          "gender": {
            "type": "string",
            "enum": ["girl", "man"],
            "example": "man"
          }
        }
      },
      "resetPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "example@mail.com",
            "example": "testmail@mail.com"
          }
        }
      },
      "resetPassword": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "newPassword": {
            "type": "string",
            "example": "newPass4321"
          }
        }
      }
    }
  }
}
